import Config from 'react-native-config';

export default {
  strongPassWordRegex: /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{12,}$/,
  specialCharacterRegex: /^[ `!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]{8,9}$/,
  letterAndNumberAndSpecialCharacterRegex:
    /^[\w`!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]*$/,
  uppercaseRegex: /^[A-Z]{8,9}$/,
  lowercaseRegex: /^[a-z]{8,9}$/,
  numberRegex: /^[0-9]{8,9}$/,
  maximumError: 5,
  myGradientID: 'MyGradientID',
  lockedTime: 900,
  minimumPasswordLength: 8,
  maxWalletNameLength: 20,
  seedPhraseLength: [12, 15, 18, 21, 24],
  dateTimeLockedKey: 'dateTimeLocked',
  dateTimeOpenAppKey: 'dateTimeOpenApp',
  remainTimeKey: 'remainTimeKey',
  isGoHomeWithRememberMeKey: 'isGoHomeWithRememberMe',
  didOpenHomeScreenKey: 'didOpenHomeScreen',
  didShowLockedScreenKey: 'didShowLockedScreen',
  RNEvent_ReceiveCode: 'receive_code',
  isEnableSwitchStateKey: 'isEnableSwitchState',
  importExistingWallet: 'importExistingWallet',
  importFromExtension: 'importFromExtension',
  tokenListKey: 'multiChainData',
  multiChainDataKey: 'multiChainData',
  BTCChainDataKey: 'BTCChainData',
  ETHChainDataKey: 'ETHChainData',
  BSCChainDataKey: 'BSCChainData',
  SOLChainDataKey: 'SOLChainData',
  newTokenListMultiData: 'newTokenListMultiData',
  newTokenListBTCData: 'newTokenListBTCDataL',
  newTokenListETHData: 'newTokenListETHData',
  newTokenListBSCData: 'newTokenListBSCData',
  newTokenListSOLData: 'newTokenListSOLData',
  newDataMultiChain: 'newDataMultiChain',
  newDataBTCChain: 'newDataBTCChain',
  newDataETHChain: 'newDataETHChain',
  newDataBSCChain: 'newDataBSCChain',
  newDataSOLChain: 'newDataSOLChain',
  firstChainTypeKey: 'firstChainType',
  firstWalletNameKey: 'firstWalletName',
  specialCharacterText: /^[ `!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]$/,
  uppercaseText: /^[A-Z]$/,
  lowercaseText: /^[a-z]$/,
  numberText: /^[0-9]$/,
  deleteWalletConfirm: 'delete Wallet',
  walletNameCharacterLimit: 20,
  changeWalletScreenID: 'changeWalletScreenID',
  saveCurrentDateTimeWhenLockedKey: 'saveCurrentDateTimeWhenLocked',
  rememberWalletIDKey: 'rememberWalletID',
  rememberWalletChainKey: 'rememberWalletChain',
  isSetupDataSelectToken: 'isSetupDataSelectToken',
  tokenDecimalMin: 0,
  tokenDecimalMax: 32,
  tokenListMultiChainDefault: 'tokenListMultiChainDefault',
  tokenListBTCChainDefault: 'tokenListBTCChainDefault',
  tokenListETHChainDefault: 'tokenListETHChainDefault',
  tokenListBSCChainDefault: 'tokenListBSCChainDefault',
  tokenListSOLChainDefault: 'tokenListSOLChainDefault',
  masterHomeDataMultiChain: 'masterHomeDataMultiChain',
  masterHomeDataETHChain: 'masterHomeDataETHChain',
  masterHomeDataBSCChain: 'masterHomeDataBSCChain',
  masterHomeDataSOLChain: 'masterHomeDataSOLChain',
  email: '<u>contact@panwallet.io</u>',
  autoLockLv1: 5,
  autoLockLv2: 15,
  autoLockLv3: 30,
  autoLockLv4: 60,
  autoLockLv5: 300,
  autoLockLv6: 600,
  fiatCurrency: 'fiatCurrency',
  changePassword: 'changePassword',
  hiddenSignIn: 'hiddenSignIn',
  chainIdList: {
    eth: Number(Config.ETH_CHAIN_ID),
    bsc: Number(Config.BSC_CHAIN_ID),
  },
  walletConnect: 'walletConnect',
  addressOfETHKey: 'addressOfETH',
  addressOfBSCKey: 'addressOfBSC',
  addressOfSOLKey: 'addressOfSOL',
  listNFTOfETHKey: 'listNFTOfETH',
  listNFTOfBSCKey: 'listNFTOfBSC',
  listNFTOfSOLKey: 'listNFTOfSOL',
  listNFTMultiChain: 'listNFTMultiChain',
  listContractAdded: 'listContractAdded',
  pageSize: 100,
  cursor: 'cursor',
  importNFTsError: 'importNFTsError',
  ethGasPrice: 'ethGasPrice',
  bscGasPrice: 'bscGasPrice',
};
